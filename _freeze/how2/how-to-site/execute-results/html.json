{
  "hash": "d7e42a2a5637ebf289bff982f84e770f",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: \"Jos√© R. Ferrer Paris\"\ntitle: \"This is how we built this!\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n## No place like home\n\nThis is a test of a personal website for [jrfep](https://jrfep.github.io/).\n\nThese instructions are in English, but this site has content in multiple languages... I know it is confusing, but this is how I work. If you require clarifications please open an issue or send me a message. \n\nAll files are available in a [GitHub repository](https://github.com/jrfep/jrfep.github.io).  The `mostly-harmless` branch uses [Quarto](https://quarto.org/docs/websites/) to build the site.\n\n\n\n\n## Render site\n\n\nWith quarto and RStudio we can open the Build tab and select Build Website...\n\nOr we can go to the command line and render the site: \n\n\n::: {.cell}\n\n```{.sh .cell-code}\nquarto render \n```\n:::\n\n\nSing [All the rowboats](https://youtu.be/2CZ8ossU4pc) in the meantime (optional).\n\nAnd then launch a preview:\n\n\n::: {.cell}\n\n```{.sh .cell-code}\nquarto preview\n```\n:::\n\n\nIf this work, we can just `git add`, `git commit` and `git push` it to the repo and see the changes!\n\n\n\n## Just in case\n\n![ [Stand back, I know regular expressions.](https://xkcd.com/208/)](https://imgs.xkcd.com/comics/regular_expressions.png)\n\n\n[^1]: Yes, I use this [weird spelling...](https://english.stackexchange.com/questions/230494/should-i-always-use-the-ised-ending-for-uk-english-and-the-ized-for-us)\n\n## Prepare data for some pages\n\n### Flexdashboard and iNaturalist\n\nTo get the data I first install the `rinat` package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::i_am(\"how2/how-to-site.qmd\")\nif (!require(rinat)) {\n  install.packages(\"rinat\")\n  library(rinat)\n}\n```\n:::\n\n\nThen I can download the observations from iNaturalist and save them in a data folder:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Download observations and save to RDS file\nuser_obs <- get_inat_obs_user(\"NeoMapas\",maxresults = 5000)\nif (!dir.exists(here::here(\"data\")))\n    dir.create(here::here(\"data\"))\nfile_name <- here::here(\"data\",\"iNaturalist-obs-NeoMapas.rds\")\nsaveRDS(file=file_name, user_obs)\n```\n:::\n\n\n\n### Photos from Flickr\n\nSo, I think I need some photos in my website, and I have a Flickr account, and I use R, there should be a library that...\n\nOh yes! found it!\n\n<https://koki25ando.github.io/FlickrAPI/>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"FlickrAPI\")\n```\n:::\n\n\nNow I need a [Flickr API key](https://www.flickr.com/services/developer/) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(FlickrAPI)\nsetFlickrAPIKey(api_key = \"YOUR_API_KEY_HERE\", install = TRUE)\n```\n:::\n\n\nAnd finally, it works!\n\nLet's now query our photos (up to 1000) and save the information in a RDS file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::i_am(\"how2/how-to-site.qmd\")\nlibrary(FlickrAPI)\nlibrary(foreach)\nlibrary(dplyr)\nreadRenviron(\"~/.Renviron\") # read the API key\nhere::i_am(\"how2/how-to-site.qmd\")\nphotos <- foreach(u=c(\"jferrer\",\"jferrer\",\"199798864@N08\"), i=c(1,2,1),.combine = \"bind_rows\") %do% {\n  getPhotos(user_id = u, img_size=\"m\", extras = c(\"description\",\"owner_name\",\n  \"url_m\"), per_page=1000, page=i)\n}\n\ndim(photos)\n\nfile_name <- here::here(\"data\",\"flickr-photos.rds\")\nsaveRDS(file=file_name, photos)\n```\n:::\n\n\n### Photos from google \n\n### Galleries with `pixture`\n\nI am experimenting with the [pixture package](https://www.royfrancis.com/pixture/index.html) to create image galleries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"htmlwidgets\",\"shiny\",\"remotes\"))\nremotes::install_github('royfrancis/pixture')\n```\n:::\n\n\n### Bibliography\n\nDownload one `csl` as a base style\n\n```{.bash}\ncd bibteX\nwget 'https://www.zotero.org/styles/journal-and-proceedings-of-the-royal-society-of-new-south-wales?source=1' --output-document=my.csl\n```\n\nModify sort order of the bibliography (not the citation...):\n\n```{.xml}\n<bibliography hanging-indent=\"true\" entry-spacing=\"0\">\n    <sort>\n      <key variable=\"issued\" sort=\"descending\"/>\n      <key macro=\"author\"/>\n    </sort>\n  ...\n```\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}